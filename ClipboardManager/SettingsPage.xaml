<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="ClipboardManager.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:clip="using:ClipboardManager"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Loaded="Page_Loaded"
    Loading="Page_Loading">
    <Page.Resources>
        <Style TargetType="ToggleSwitch" BasedOn="{StaticResource FlippedToggleSwitchStyle}"/>
        <Style x:Key="ExpanderListStyle" TargetType="Expander" BasedOn="{StaticResource ExpanderStyle}">
            <Setter Property="Background" Value="Transparent"/>
        </Style>
    </Page.Resources>

    <ScrollViewer>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="ClearSettingsDefault"/>
                <VisualState x:Name="ClearSettingsShowIcon">
                    <VisualState.Setters>
                        <Setter Target="OkClearSettingsFontIcon.Visibility" Value="Visible"/>
                        <Setter Target="ClearSettingsViewbox.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                    
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetName="OkClearSettingsProgressRing"
                            Storyboard.TargetProperty="Value"
                            EnableDependentAnimation="True"
                            From="0"
                            To="1"
                            Duration="0:0:0.281">
                            <DoubleAnimation.EasingFunction>
                                <SineEase EasingMode="EaseInOut" />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OkClearSettingsFontIcon" Storyboard.TargetProperty="Opacity">
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                            <LinearDoubleKeyFrame KeyTime="0:0:1.0" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OkClearSettingsProgressRing" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Visible"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <StackPanel VerticalAlignment="Top" Orientation="Vertical" Spacing="3" Margin="0,0,0,15">
            <!--#region Application -->
            <TextBlock x:Uid="HeaderApplicationTextBlock" Style="{ThemeResource CaptionTextBlockStyle}" Opacity="0.6"/>
            <clip:HostControl x:Name="ApplicationVersionHostControl" x:Uid="ApplicationVersionHostControl"/>

            <clip:HostControl x:Uid="AutomaticStartHostControl">
                <clip:HostControl.HostContent>
                    <ToggleSwitch x:Name="AutoStartToggleSwitch" Toggled="AutoStartToggleSwitch_Toggled"/>
                </clip:HostControl.HostContent>
            </clip:HostControl>

            <clip:HostControl x:Uid="SaveMatchingResultsHostControl">
                <clip:HostControl.HostContent>
                    <ToggleSwitch x:Name="SaveMatchingResultsToggleSwitch" Toggled="SaveMatchingResultsToggleSwitch_Toggled"/>
                </clip:HostControl.HostContent>
            </clip:HostControl>

            <Expander Style="{StaticResource ExpanderStyle}" Padding="0" Background="Transparent">
                <Expander.Header>
                    <clip:HostControl x:Uid="AllowNotificationsHostControl" Background="Transparent" BorderThickness="0" Padding="0">
                        <clip:HostControl.HostContent>
                            <ToggleSwitch x:Name="NotificationsToggleSwitch" Toggled="EnableListeningToggleSwitch_Toggled"/>
                        </clip:HostControl.HostContent>
                    </clip:HostControl>
                </Expander.Header>

                <ListView SelectionMode="None" x:Name="NotificationsExpander" Margin="0" Padding="0">
                    <ListView.Resources>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Margin" Value="0" />
                        </Style>
                        <Style TargetType="clip:HostControl">
                            <Setter Property="Background" Value="{ThemeResource ExpanderHeaderBackground}"/>
                        </Style>
                    </ListView.Resources>

                    <clip:HostControl x:Uid="NotificationsExpanderSoundHostControl" CornerRadius="0">
                        <clip:HostControl.HostContent>
                            <ComboBox x:Name="NotificationSoundComboBox" Grid.Column="1" SelectedIndex="0" MinWidth="150" SelectionChanged="NotificationSoundComboBox_SelectionChanged">
                                <ComboBoxItem Tag="0" x:Uid="NotificationSoundComboBox_Default">Default</ComboBoxItem>
                                <ComboBoxItem Tag="1" x:Uid="NotificationSoundComboBox_InstantMessage">Instant message</ComboBoxItem>
                                <ComboBoxItem Tag="2" x:Uid="NotificationSoundComboBox_Mail">Mail</ComboBoxItem>
                                <ComboBoxItem Tag="3" x:Uid="NotificationSoundComboBox_Reminder">Reminder</ComboBoxItem>
                                <ComboBoxItem Tag="4" x:Uid="NotificationSoundComboBox_SMS">SMS</ComboBoxItem>
                                <ComboBoxItem Tag="5" x:Uid="NotificationSoundComboBox_Silent">Silent</ComboBoxItem>
                            </ComboBox>
                        </clip:HostControl.HostContent>
                    </clip:HostControl>

                    <clip:HostControl x:Uid="NotificationsExpanderScenarioHostControl" CornerRadius="0">
                        <clip:HostControl.HostContent>
                            <ComboBox x:Name="NotificationScenariosComboBox" Grid.Column="1" SelectedIndex="0" MinWidth="150" SelectionChanged="NotificationScenariosComboBox_SelectionChanged">
                                <ComboBoxItem Tag="0" x:Uid="NotificationScenariosComboBox_Default">Default</ComboBoxItem>
                                <ComboBoxItem Tag="1" x:Uid="NotificationScenariosComboBox_Reminder">Reminder</ComboBoxItem>
                                <ComboBoxItem Tag="2" x:Uid="NotificationScenariosComboBox_Alarm">Alarm</ComboBoxItem>
                                <ComboBoxItem Tag="3" x:Uid="NotificationScenariosComboBox_IncomingCall">Incoming call</ComboBoxItem>
                                <ComboBoxItem Tag="4" x:Uid="NotificationScenariosComboBox_Urgent">Urgent</ComboBoxItem>
                            </ComboBox>
                        </clip:HostControl.HostContent>
                    </clip:HostControl>

                    <clip:HostControl x:Uid="NotificationsExpanderDurationHostControl" CornerRadius="0,0,5,5">
                        <clip:HostControl.HostContent>
                            <StackPanel x:Name="DurationButtonsStackPanel" Orientation="Horizontal">
                                <ToggleButton x:Name="DurationShortToggleButton" 
                                              x:Uid="DurationShortToggleButton" 
                                              Tag="1"
                                              CornerRadius="5,0,0,5" 
                                              MinWidth="75" 
                                              Click="DurationToggleButton_Click"/>
                                <ToggleButton x:Name="DurationDefaultToggleButton" 
                                              x:Uid="DurationDefaultToggleButton" 
                                              Tag="0"
                                              CornerRadius="0,0,0,0" 
                                              MinWidth="75" 
                                              IsChecked="True" 
                                              Click="DurationToggleButton_Click"/>
                                <ToggleButton x:Name="DurationLongToggleButton" 
                                              x:Uid="DurationLongToggleButton" 
                                              Tag="2"
                                              CornerRadius="0,5,5,0" 
                                              MinWidth="75" 
                                              Click="DurationToggleButton_Click"/>
                            </StackPanel>
                        </clip:HostControl.HostContent>
                    </clip:HostControl>

                </ListView>
            </Expander>

            <Expander Style="{StaticResource ExpanderStyle}">
                <Expander.Header>
                    <clip:HostControl Background="Transparent" BorderThickness="0" Padding="0">
                        <clip:HostControl.Header>
                            <Grid ToolTipService.ToolTip="This only applies when the application auto-starts." RowSpacing="3" VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Uid="StartMinimizedTextBlock" Grid.Row="0"/>
                                <TextBlock x:Uid="StartMinimizedSubtitleTextBlock" Grid.Row="1" Style="{StaticResource SettingSubheaderTextBlockStyle}"/>
                            </Grid>
                        </clip:HostControl.Header>
                        <clip:HostControl.HostContent>
                            <ToggleSwitch x:Name="StartMinimizedToggleSwitch" Toggled="StartMinimizedToggleSwitch_Toggled"/>
                        </clip:HostControl.HostContent>
                    </clip:HostControl>
                </Expander.Header>

                <StackPanel Orientation="Vertical" Spacing="7" HorizontalAlignment="Stretch">
                    <clip:HostControl x:Uid="HideAppWindowHostControl" IsEnabled="{x:Bind StartMinimizedToggleSwitch.IsOn, Mode=OneWay}" Background="Transparent">
                        <clip:HostControl.HostContent>
                            <ToggleSwitch x:Name="HideAppWindowToggleSwitch" Toggled="HideAppWindowToggleSwitch_Toggled"/>
                        </clip:HostControl.HostContent>
                    </clip:HostControl>
                </StackPanel>
            </Expander>
            <!--#endregion-->


            <!--#region Formatting & matching -->
            <TextBlock x:Uid="HeaderFormattingTextBlock" Style="{ThemeResource CaptionTextBlockStyle}" Opacity="0.6" Margin="0,12,0,0"/>
            <clip:HostControl x:Uid="IgnoreCaseHostControl">
                <clip:HostControl.HostContent>
                    <ToggleSwitch x:Name="IgnoreCaseToggleSwitch" Toggled="IgnoreCaseToggleSwitch_Toggled"/>
                </clip:HostControl.HostContent>
            </clip:HostControl>

            <clip:HostControl x:Uid="RegexModeHostControl">
                <clip:HostControl.HostContent>
                    <ComboBox x:Name="RegexModeComboBox" SelectedIndex="0" SelectionChanged="RegexModeComboBox_SelectionChanged" MinWidth="100">
                        <ComboBoxItem x:Uid="RegexModeComboBox_Match" Tag="0">
                            <ToolTipService.ToolTip>
                                <TextBlock x:Uid="RegexModeComboBox_Match_ToolTip"/>
                            </ToolTipService.ToolTip>
                        </ComboBoxItem>
                        <ComboBoxItem x:Uid="RegexModeComboBox_Search" Tag="1">
                            <ToolTipService.ToolTip>
                                <TextBlock x:Uid="RegexModeComboBox_Search_ToolTip"/>
                            </ToolTipService.ToolTip>
                        </ComboBoxItem>
                    </ComboBox>
                </clip:HostControl.HostContent>
            </clip:HostControl>

            <clip:HostControl x:Uid="AddDuplicatedActionsHostControl">
                <clip:HostControl.HostContent>
                    <ToggleSwitch x:Name="AddDuplicatedActionsToggleSwitch" Toggled="AddDuplicatedActionsToggleSwitch_Toggled"/>
                </clip:HostControl.HostContent>
            </clip:HostControl>

            <clip:HostControl x:Uid="ImportClipboardHistoryHostControl">
                <clip:HostControl.HostContent>
                    <ToggleSwitch x:Name="ImportClipboardHistoryToggleSwitch" Toggled="ImportClipboardHistoryToggleSwitch_Toggled"/>
                </clip:HostControl.HostContent>
            </clip:HostControl>
            <!--#endregion-->


            <!--#region Browser -->
            <TextBlock x:Uid="HeaderBrowserTextBlock" Style="{ThemeResource CaptionTextBlockStyle}" Opacity="0.6" Margin="0,12,0,0"/>
            <Expander Style="{StaticResource ExpanderStyle}">
                <Expander.Header>
                    <clip:HostControl x:Uid="BrowserHostControl" Background="Transparent" BorderThickness="0" Padding="0">
                        <clip:HostControl.HostContent>
                            <ToggleSwitch x:Name="UseCustomBrowser" Toggled="UseCustomBrowser_Toggled"/>
                        </clip:HostControl.HostContent>
                    </clip:HostControl>
                </Expander.Header>

                <Grid ColumnSpacing="10" Padding="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="BrowserStringTextBox" 
                             x:Uid="BrowserStringTextBox" 
                             Grid.Column="0"
                             IsEnabled="{x:Bind UseCustomBrowser.IsOn, Mode=OneWay}" 
                             MinWidth="200" 
                             MinHeight="70" 
                             TextWrapping="Wrap" 
                             TextChanged="BrowserStringTextBox_TextChanged"/>
                    <Button Grid.Column="1" Click="SaveBrowserStringButton_Click" IsEnabled="{x:Bind UseCustomBrowser.IsOn, Mode=OneWay}">
                        <FontIcon Glyph="&#xe73e;"/>
                    </Button>
                </Grid>
            </Expander>
            <!--#endregion-->


            <!--#region Window style -->
            <TextBlock x:Uid="HeaderWindowStyleTextBlock" Style="{ThemeResource CaptionTextBlockStyle}" Opacity="0.6" Margin="0,12,0,0"/>
            <Expander x:Uid="WindowStyleExpander" Style="{StaticResource ExpanderListStyle}">
                <Expander.Header>
                    <clip:HostControl x:Uid="WindowStyleHostControl" Background="Transparent" BorderThickness="0" Padding="0"/>
                </Expander.Header>

                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                    <clip:HostControl x:Uid="WindowPresenterStyleAllowMinimizeHostControl" CornerRadius="0" Background="{ThemeResource ExpanderHeaderBackground}">
                        <clip:HostControl.HostContent>
                            <ToggleSwitch x:Name="AllowMinimizeToggleSwitch" Toggled="AllowMinimizeToggleSwitch_Toggled"/>
                        </clip:HostControl.HostContent>
                    </clip:HostControl>

                    <clip:HostControl x:Uid="WindowPresenterStyleAllowMaximizeHostControl" CornerRadius="0,0,5,5" Background="{ThemeResource ExpanderHeaderBackground}">
                        <clip:HostControl.HostContent>
                            <ToggleSwitch x:Name="AllowMaximizeToggleSwitch" Toggled="AllowMaximizeToggleSwitch_Toggled"/>
                        </clip:HostControl.HostContent>
                    </clip:HostControl>
                </StackPanel>
            </Expander>
            <!--#endregion-->

            
            <!--#region Storage -->
            <TextBlock x:Uid="HeaderStorageTextBlock" Style="{ThemeResource CaptionTextBlockStyle}" Opacity="0.6" Margin="0,12,0,0"/>

            <Expander x:Uid="TriggersStorageExpander" Style="{StaticResource ExpanderListStyle}" Background="Transparent" Expanding="TriggersStorageExpander_Expanding">
                <StackPanel>
                    <clip:HostControl x:Uid="UserFileHostControl" Background="{ThemeResource ExpanderHeaderBackground}" CornerRadius="0">
                        <clip:HostControl.HostContent>
                            <Button x:Uid="LocateButton" Click="LocateButton_Clicked"/>
                        </clip:HostControl.HostContent>
                    </clip:HostControl>

                    <clip:HostControl CornerRadius="0">
                        <clip:HostControl.Header>
                            <Grid RowSpacing="4" Padding="0,7">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Uid="CreateExampleFileHostControl" Grid.Row="0"/>
                                <TextBlock x:Name="UserFilePathTextBlock" Style="{StaticResource CaptionTextBlockStyle}" Grid.Row="1" Opacity="0.6"/>
                            </Grid>
                        </clip:HostControl.Header>
                        <clip:HostControl.HostContent>
                            <StackPanel Orientation="Horizontal" Spacing="3">
                                <Button 
                                    x:Uid="CreateExampleTriggersFileButtton" 
                                    MinWidth="100"
                                    Click="CreateExampleTriggersFileButton_Click"/>
                                <Button 
                                    x:Uid="OverwriteExampleTriggersFileButtton" 
                                    MinWidth="100"
                                    Click="OverwriteExampleTriggersFileButton_Click"/>
                            </StackPanel>
                        </clip:HostControl.HostContent>
                    </clip:HostControl>

                    <StackPanel Orientation="Vertical" Background="{ThemeResource ExpanderHeaderBackground}" CornerRadius="0,0,5,5" BorderThickness="1">
                        <clip:HostControl x:Uid="TriggersXmlExampleHostControl" CornerRadius="0" BorderThickness="0" Background="Transparent"/>
                        <StackPanel HorizontalAlignment="Stretch" Spacing="2" Background="{ThemeResource SolidBackgroundFillColorBaseBrush}">
                            <Border Background="{ThemeResource ExpanderContentBackground}" Padding="7,10">
                                <RichTextBlock FontFamily="Cascadia Code">
                                    <Paragraph FontFamily="{StaticResource ContentControlThemeFontFamily}" Margin="10,0,0,10">Valid XML declaration</Paragraph>

                                    <Paragraph Foreground="LightBlue">&lt;settings&gt;</Paragraph>
                                    <Paragraph Foreground="LightBlue" TextIndent="20">&lt;triggers&gt;</Paragraph>

                                    <Paragraph Foreground="LightBlue" TextIndent="40">&lt;trigger&gt;</Paragraph>

                                    <Paragraph Foreground="LightBlue" TextIndent="60">
                                        <Run>&lt;re&gt;</Run>
                                        <Run>&lt;/re&gt;</Run>
                                    </Paragraph>

                                    <Paragraph Foreground="DarkGreen" TextIndent="60" Margin="0,10,0,0">
                                        // Valid values: any text.
                                    </Paragraph>
                                    <Paragraph Foreground="DarkGreen" TextIndent="60">
                                        // Remark: {} is the symbol used to insert the content matching this trigger into the string of format.
                                    </Paragraph>
                                    <Paragraph Foreground="DarkGreen" TextIndent="80">
                                        //- example-url.com/search?={} + eleiko = example-url.com/search?=eleiko
                                    </Paragraph>
                                    <Paragraph Foreground="LightBlue" TextIndent="60">
                                        <Run>&lt;format&gt;</Run>
                                        <Run Foreground="{StaticResource TextFillColorPrimaryBrush}">example-url.com/search?={}</Run>
                                        <Run>&lt;/format&gt;</Run>
                                    </Paragraph>

                                    <Paragraph Foreground="DarkGreen" TextIndent="60" Margin="0,10,0,0">
                                        // Valid values: any text
                                    </Paragraph>
                                    <Paragraph Foreground="LightBlue" TextIndent="60">
                                        <Run>&lt;label&gt;</Run>
                                        <Run Foreground="{StaticResource TextFillColorPrimaryBrush}">Example</Run>
                                        <Run>&lt;/label&gt;</Run>
                                    </Paragraph>

                                    <Paragraph Foreground="DarkGreen" TextIndent="60" Margin="0,10,0,0">
                                        // Valid values: true,1
                                    </Paragraph>
                                    <Paragraph Foreground="LightBlue" TextIndent="60">
                                        <Run>&lt;enabled&gt;</Run>
                                        <Run Foreground="{StaticResource TextFillColorPrimaryBrush}">true</Run>
                                        <Run>&lt;/enabled&gt;</Run>
                                    </Paragraph>

                                    <Paragraph Foreground="LightBlue" TextIndent="40">&lt;/trigger&gt;</Paragraph>

                                    <Paragraph Foreground="LightBlue" TextIndent="20">&lt;/triggers&gt;</Paragraph>
                                    <Paragraph Foreground="LightBlue">&lt;/settings&gt;</Paragraph>
                                </RichTextBlock>
                            </Border>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </Expander>

            <clip:HostControl x:Uid="ClearSettingsHostControl">
                <clip:HostControl.HostContent>
                    <Button MinWidth="100" Click="ClearSettingsButton_Click">
                        <StackPanel Orientation="Horizontal" Spacing="6">
                            <TextBlock x:Uid="ClearSettingsButton"/>
                            <Viewbox x:Name="ClearSettingsViewbox" Height="18" Visibility="Collapsed">
                                <Grid>
                                    <FontIcon x:Name="OkClearSettingsFontIcon" Glyph="&#xe73e;" FontSize="16" Opacity="0"/>
                                    <ProgressRing x:Name="OkClearSettingsProgressRing" Maximum="1" Value="0" IsIndeterminate="False"/>
                                </Grid>
                            </Viewbox>
                        </StackPanel>
                    </Button>
                </clip:HostControl.HostContent>
            </clip:HostControl>
            <!--#endregion-->


            <Grid Grid.Column="0" Padding="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <HyperlinkButton x:Uid="ReportIssueHyperlinkButton" 
                                 NavigateUri="https://github.com/psyKomicron/ClipboardManager/issues"
                                 ToolTipService.ToolTip="https://github.com/psyKomicron/ClipboardManager/issues">
                    <StackPanel Orientation="Horizontal" Spacing="10">
                        <FontIcon Glyph="&#xebe8;"/>
                        <TextBlock x:Uid="ReportIssueTextBlock"/>
                    </StackPanel>
                </HyperlinkButton>

                <TextBlock x:Uid="SettingsOtherLinksTextBlock" Margin="0,20,0,5" Style="{StaticResource SubtitleTextBlockStyle}" Grid.Row="1"/>

                <StackPanel Grid.Row="2" Orientation="Horizontal" Spacing="7">
                    <HyperlinkButton
                        Content="GitHub"
                        NavigateUri="https://github.com/psyKomicron/ClipboardManager"
                        ToolTipService.ToolTip="https://github.com/psyKomicron/Croak"/>

                    <HyperlinkButton
                        NavigateUri="https://github.com/microsoft/windowsappsdk" 
                        ToolTipService.ToolTip="https://github.com/microsoft/windowsappsdk">
                        <TextBlock Text="Windows App SDK" TextWrapping="Wrap"/>
                    </HyperlinkButton>

                    <HyperlinkButton x:Uid="ReportIssueHyperlinkButton" 
                                     NavigateUri="https://github.com/psyKomicron/ClipboardManager/issues"
                                     ToolTipService.ToolTip="https://github.com/psyKomicron/ClipboardManager/issues"/>
                </StackPanel>

                <TextBlock x:Uid="MadeByTextBlock" Margin="0,20,0,0" Style="{StaticResource SubtitleTextBlockStyle}" Grid.Row="3"/>
            </Grid>
        </StackPanel>
    </ScrollViewer>
</Page>

<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="ClipboardManager.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ClipboardManager"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Loaded="Page_Loaded"
    Loading="Page_Loading">
    <Page.Resources>
        <Style TargetType="ToggleSwitch" BasedOn="{StaticResource FlippedToggleSwitchStyle}"/>
    </Page.Resources>

    <ScrollViewer>
        <StackPanel VerticalAlignment="Top" Orientation="Vertical" Spacing="5" Margin="0,0,0,15">
            <TextBlock x:Uid="HeaderApplicationTextBlock" Style="{ThemeResource CaptionTextBlockStyle}" Opacity="0.6"/>
            <local:HostControl Header="Automatic start">
                <local:HostControl.HostContent>
                    <ToggleSwitch x:Name="AutoStartToggleSwitch" Toggled="AutoStartToggleSwitch_Toggled"/>
                </local:HostControl.HostContent>
            </local:HostControl>

            <local:HostControl Header="Save matching results">
                <local:HostControl.HostContent>
                    <ToggleSwitch x:Name="SaveMatchingResultsToggleSwitch" Toggled="SaveMatchingResultsToggleSwitch_Toggled"/>
                </local:HostControl.HostContent>
            </local:HostControl>

            <Expander Style="{StaticResource ExpanderStyle}" Padding="0">
                <Expander.Header>
                    <local:HostControl Header="Allow notifications" Background="Transparent" BorderThickness="0" Padding="0">
                        <local:HostControl.HostContent>
                            <ToggleSwitch x:Name="NotificationsToggleSwitch" Toggled="EnableListeningToggleSwitch_Toggled"/>
                        </local:HostControl.HostContent>
                    </local:HostControl>
                </Expander.Header>

                <ListView SelectionMode="None" x:Name="NotificationsExpander" Margin="0" Padding="0">
                    <ListView.Resources>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Margin" Value="0" />
                        </Style>
                    </ListView.Resources>

                    <local:HostControl Header="Sound" CornerRadius="0" Background="Transparent">
                        <local:HostControl.HostContent>
                            <ComboBox x:Name="NotificationSoundComboBox" Grid.Column="1" SelectedIndex="0" MinWidth="150" SelectionChanged="NotificationSoundComboBox_SelectionChanged">
                                <ComboBoxItem x:Uid="NotificationSoundComboBox_Default">Default</ComboBoxItem>
                                <ComboBoxItem x:Uid="NotificationSoundComboBox_InstantMessage">Instant message</ComboBoxItem>
                                <ComboBoxItem x:Uid="NotificationSoundComboBox_Mail">Mail</ComboBoxItem>
                                <ComboBoxItem x:Uid="NotificationSoundComboBox_Reminder">Reminder</ComboBoxItem>
                                <ComboBoxItem x:Uid="NotificationSoundComboBox_SMS">SMS</ComboBoxItem>
                                <ComboBoxItem x:Uid="NotificationSoundComboBox_Silent">Silent</ComboBoxItem>
                            </ComboBox>
                        </local:HostControl.HostContent>
                    </local:HostControl>

                    <local:HostControl Header="Scenario" CornerRadius="0" Background="Transparent">
                        <local:HostControl.HostContent>
                            <ComboBox x:Name="NotificationScenariosComboBox" Grid.Column="1" SelectedIndex="0" MinWidth="150" SelectionChanged="NotificationScenariosComboBox_SelectionChanged">
                                <ComboBoxItem x:Uid="NotificationScenariosComboBox_Default">Default</ComboBoxItem>
                                <ComboBoxItem x:Uid="NotificationScenariosComboBox_Reminder">Reminder</ComboBoxItem>
                                <ComboBoxItem x:Uid="NotificationScenariosComboBox_Alarm">Alarm</ComboBoxItem>
                                <ComboBoxItem x:Uid="NotificationScenariosComboBox_IncomingCall">Incoming call</ComboBoxItem>
                                <ComboBoxItem x:Uid="NotificationScenariosComboBox_Urgent">Urgent</ComboBoxItem>
                            </ComboBox>
                        </local:HostControl.HostContent>
                    </local:HostControl>

                    <local:HostControl Header="Duration" CornerRadius="0" Background="Transparent">
                        <local:HostControl.HostContent>
                            <StackPanel x:Name="DurationButtonsStackPanel" Orientation="Horizontal">
                                <ToggleButton x:Name="DurationShortToggleButton" 
                                              x:Uid="DurationShortToggleButton" 
                                              Tag="1" 
                                              Content="Short" 
                                              CornerRadius="5,0,0,5" 
                                              MinWidth="75" 
                                              Click="DurationToggleButton_Click"/>
                                <ToggleButton x:Name="DurationDefaultToggleButton" 
                                              x:Uid="DurationDefaultToggleButton" 
                                              Tag="0" 
                                              Content="Default" 
                                              CornerRadius="0,0,0,0" 
                                              MinWidth="75" 
                                              IsChecked="True" 
                                              Click="DurationToggleButton_Click"/>
                                <ToggleButton x:Name="DurationLongToggleButton" 
                                              x:Uid="DurationLongToggleButton" 
                                              Tag="2" 
                                              Content="Long" 
                                              CornerRadius="0,5,5,0" 
                                              MinWidth="75" 
                                              Click="DurationToggleButton_Click"/>
                            </StackPanel>
                        </local:HostControl.HostContent>
                    </local:HostControl>

                </ListView>
            </Expander>

            <local:HostControl IsEnabled="False">
                <local:HostControl.Header>
                    <Grid ToolTipService.ToolTip="This only applies when the application auto-starts." RowSpacing="3" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Start minimized"/>
                        <TextBlock Grid.Row="1" Style="{StaticResource SettingSubheaderTextBlockStyle}" Text="Control the application window state when it's auto-started."/>
                    </Grid>
                </local:HostControl.Header>
                <local:HostControl.HostContent>
                    <ToggleSwitch x:Name="StartMinimizedToggleSwitch" Toggled="StartMinimizedToggleSwitch_Toggled"/>
                </local:HostControl.HostContent>
            </local:HostControl>


            <TextBlock x:Uid="HeaderFormattingTextBlock" Style="{ThemeResource CaptionTextBlockStyle}" Opacity="0.6" Margin="0,12,0,0"/>
            <local:HostControl x:Uid="IgnoreCaseHostControl">
                <local:HostControl.HostContent>
                    <ToggleSwitch x:Name="IgnoreCaseToggleSwitch" Toggled="IgnoreCaseToggleSwitch_Toggled"/>
                </local:HostControl.HostContent>
            </local:HostControl>

            <local:HostControl Header="Regex mode">
                <local:HostControl.HostContent>
                    <ComboBox x:Name="RegexModeComboBox" SelectedIndex="0" SelectionChanged="RegexModeComboBox_SelectionChanged" MinWidth="100">
                        <ComboBoxItem x:Uid="RegexModeComboBox_Match" Tag="0">
                            <ToolTipService.ToolTip>
                                <TextBlock x:Uid="RegexModeComboBox_Match_ToolTip"/>
                            </ToolTipService.ToolTip>
                        </ComboBoxItem>
                        <ComboBoxItem x:Uid="RegexModeComboBox_Search" Tag="1">
                            <ToolTipService.ToolTip>
                                <TextBlock x:Uid="RegexModeComboBox_Search_ToolTip"/>
                            </ToolTipService.ToolTip>
                        </ComboBoxItem>
                    </ComboBox>
                </local:HostControl.HostContent>
            </local:HostControl>

            
            <TextBlock x:Uid="HeaderStorageTextBlock" Style="{ThemeResource CaptionTextBlockStyle}" Opacity="0.6" Margin="0,12,0,0"/>

            <local:HostControl x:Uid="ClearSettingsHostControl">
                <local:HostControl.HostContent>
                    <Button x:Uid="ClearSettingsButton" MinWidth="100"/>
                </local:HostControl.HostContent>
            </local:HostControl>
            
            <local:HostControl Header="Create example file">
                <local:HostControl.HostContent>
                    <StackPanel Orientation="Horizontal">
                        <Button 
                            x:Uid="CreateExampleTriggersFileButtton" 
                            MinWidth="100" 
                            CornerRadius="5,0,0,5"
                            Click="CreateExampleTriggersFileButton_Click"/>
                        <Button 
                            x:Uid="OverwriteExampleTriggersFileButtton" 
                            MinWidth="100" 
                            CornerRadius="0,5,5,0"
                            Click="OverwriteExampleTriggersFileButton_Click"/>
                    </StackPanel>
                </local:HostControl.HostContent>
            </local:HostControl>

            <Expander Style="{StaticResource ExpanderStyle}" HorizontalContentAlignment="Stretch">
                <Expander.Header>
                    <local:HostControl Header="Triggers XML example" Background="Transparent" BorderThickness="0" Padding="0"/>
                </Expander.Header>
                <Expander.Content>
                    <StackPanel HorizontalAlignment="Stretch" Spacing="2" Background="{ThemeResource SolidBackgroundFillColorBaseBrush}">
                        <Border Background="{ThemeResource ExpanderContentBackground}" Padding="7,10" CornerRadius="{StaticResource ControlCornerRadius}">
                            <RichTextBlock FontFamily="Cascadia Code">
                                <Paragraph FontFamily="{StaticResource ContentControlThemeFontFamily}" Margin="10,0,0,10">Valid XML declaration</Paragraph>

                                <Paragraph Foreground="LightBlue">&lt;settings&gt;</Paragraph>
                                <Paragraph Foreground="LightBlue" TextIndent="20">&lt;triggers&gt;</Paragraph>

                                <Paragraph Foreground="LightBlue" TextIndent="40">&lt;trigger&gt;</Paragraph>

                                <Paragraph Foreground="LightBlue" TextIndent="60">
                                    <Run>&lt;re&gt;</Run>
                                    <Run>&lt;/re&gt;</Run>
                                </Paragraph>

                                <Paragraph Foreground="DarkGreen" TextIndent="60" Margin="0,10,0,0">
                                    // Valid values: any text.
                                </Paragraph>
                                <Paragraph Foreground="DarkGreen" TextIndent="60">
                                    // Remark: {} is the symbol used to insert the content matching this trigger into the string of format.
                                </Paragraph>
                                <Paragraph Foreground="DarkGreen" TextIndent="80">
                                    //- example-url.com/search?={} + eleiko = example-url.com/search?=eleiko
                                </Paragraph>
                                <Paragraph Foreground="LightBlue" TextIndent="60">
                                    <Run>&lt;format&gt;</Run>
                                    <Run Foreground="{StaticResource TextFillColorPrimaryBrush}">example-url.com/search?={}</Run>
                                    <Run>&lt;/format&gt;</Run>
                                </Paragraph>

                                <Paragraph Foreground="DarkGreen" TextIndent="60" Margin="0,10,0,0">
                                    // Valid values: any text
                                </Paragraph>
                                <Paragraph Foreground="LightBlue" TextIndent="60">
                                    <Run>&lt;label&gt;</Run>
                                    <Run Foreground="{StaticResource TextFillColorPrimaryBrush}">Example</Run>
                                    <Run>&lt;/label&gt;</Run>
                                </Paragraph>

                                <Paragraph Foreground="DarkGreen" TextIndent="60" Margin="0,10,0,0">
                                    // Valid values: true,1
                                </Paragraph>
                                <Paragraph Foreground="LightBlue" TextIndent="60">
                                    <Run>&lt;enabled&gt;</Run>
                                    <Run Foreground="{StaticResource TextFillColorPrimaryBrush}">true</Run>
                                    <Run>&lt;/enabled&gt;</Run>
                                </Paragraph>

                                <Paragraph Foreground="LightBlue" TextIndent="40">&lt;/trigger&gt;</Paragraph>

                                <Paragraph Foreground="LightBlue" TextIndent="20">&lt;/triggers&gt;</Paragraph>
                                <Paragraph Foreground="LightBlue">&lt;/settings&gt;</Paragraph>
                            </RichTextBlock>
                        </Border>
                    </StackPanel>
                </Expander.Content>
            </Expander>


            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock x:Uid="SettingsOtherLinksTextBlock" Margin="0,0,0,5" Style="{StaticResource SubtitleTextBlockStyle}"/>

                <StackPanel Grid.Row="1" Orientation="Horizontal" Spacing="7">
                    <HyperlinkButton
                        Content="GitHub"
                        NavigateUri="https://github.com/psyKomicron/ClipboardManager"
                        ToolTipService.ToolTip="https://github.com/psyKomicron/Croak"/>

                    <HyperlinkButton
                        NavigateUri="https://github.com/microsoft/windowsappsdk" 
                        ToolTipService.ToolTip="https://github.com/microsoft/windowsappsdk">
                        <TextBlock Text="Windows App SDK" TextWrapping="Wrap"/>
                    </HyperlinkButton>
                </StackPanel>
            </Grid>
        </StackPanel>
    </ScrollViewer>
</Page>
